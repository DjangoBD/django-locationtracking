Dependencies:
    dateutil

Compatibility Notes:
    Tested / used with Django 1.0
    Many providers supply time in UTC - this means if your database does not support timezones your times will not shift to your time zone (PostgreSQL is the only DB I'm aware of supporting timezones.) I plan to "build in" a timedelta object in the future that can be used to correct for this.

To install / use:
- Put the "locationtracking" directory somewhere on your PYTHONPATH
- Define a settings.GOOGLE_MAPS_KEY attribute
- Define settings.INSTAMAPPER_USER, settings.INSTAMAPPER_API_KEY and settings.INSTAMAPPER_SOURCE_NAME
- Add 'locationtracking' to your INSTALLED_APPS, and run syncdb
- Add "(r'^locationtracking/', include('locationtracking.urls'))," to your main URLconf to include the locationtracking URLs
- In the admin, define a position report source (to match settings.INSTAMAPPER_SOURCE_NAME) and set the "display on maps" attribute to True

Now you're ready to import some data
- set PYTHONPATH and DJANGO_SETTINGS_MODULE
- python locationtracking/bin/import_instamapper.py

Now set up the map
- The stock "largemap.html" template (map of positions from a single day) assumes you are using a base.html file with head, body, and content blocks.
    HEAD: needs to be between <head> and </head> - this will be initialization JavaScript.
    BODY: needs to be between <body and > - this will override your body tag with load/unload scripts.
    CONTENT: your sites' content area.
- python locate/manage.py runserver
- Go to http://localhost:8000/locationtracking/
- It should show a map

For privacy, the location views CAN be marked as login_required if you so choose.

More details can be found in a screencast on my website, http://www.adamfast.com/programming/locationtracking/
